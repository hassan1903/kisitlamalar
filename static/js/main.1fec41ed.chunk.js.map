{"version":3,"sources":["getDataFromMinistry.js","index.js"],"names":["cheerio","require","updateData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","cityList","newCityList","wrap","_context","prev","next","objectSpread","fetch","method","mode","then","response","text","data","$","load","cities","forEach","element","index","city","label","get","attribs","id","color","status","parseInt","replace","abrupt","stop","_x","apply","this","arguments","updateEstimatedData","_ref2","_callee2","cityEstimatedList","newCityListEstimated","_context2","numberOfPatient","_x2","getRegionCode","_ref3","_callee3","regionCode","_context3","json","country","region_code","ReactGA","initialize","TabPane","Tabs","LightBulb","_useState","useState","_useState2","slicedToArray","light","setLight","_useState3","_useState4","setRegionCode","_useState5","_useState6","spinning","setSpinning","_useState7","assign","JSON","parse","stringify","citiesList","_useState8","setCityList","_useState9","nextCitiesList","_useState10","estimatedCityList","setEstimatedCityList","_useState11","value","_useState12","selectedCity","setSelectedCity","_useState13","_useState14","selectedEstimatedCity","setSelectedEstimatedCity","ruleId","ruleIdTab2","colorCode","key","fillColor","find","useEffect","newEstimatedCityList","newRegionCode","sent","t0","currentLocation","currentEstimatedLocation","react_default","createElement","className","tabs","defaultActiveKey","onChange","cityStatus","item","tab","moment","locale","format","style","paddingTop","paddingBottom","textAlign","src_CoronaVirus","es_select","showSearch","width","placeholder","val","options","undefined","optionFilterProp","filterOption","input","option","toLocaleUpperCase","indexOf","spin","size","ruleList","rules","map","el","icon","href","src_TwitterIcon","TwitterIcon","props","version","xmlns","x","y","height","viewBox","fill","d","CoronaVirus","rootElement","document","getElementById","ReactDOM","render","src_LightBulb"],"mappings":"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","file":"static/js/main.1fec41ed.chunk.js","sourcesContent":["const cheerio = require(\"cheerio\");\r\n\r\nconst updateData = async (cityList) => {\r\n  let newCityList = { ...cityList };\r\n  await fetch(\r\n    \"https://cors-anywhere.herokuapp.com/https://covid19.saglik.gov.tr/?lang=tr-TR\",\r\n    {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n    }\r\n  )\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      const $ = cheerio.load(data);\r\n      cityList.cities.forEach((element, index) => {\r\n        const city = $(\"[data-adi=\" + element.label + \"]\").get(1);\r\n        if (city && city.attribs && city.attribs.id) {\r\n          const color = city.attribs.id;\r\n          newCityList.cities[index].status = parseInt(\r\n            color.replace(\"color_\", \"\"),\r\n            10\r\n          );\r\n        }\r\n      });\r\n    });\r\n  return newCityList;\r\n};\r\n\r\nexport const updateEstimatedData = async (cityEstimatedList) => {\r\n  let newCityListEstimated = { ...cityEstimatedList };\r\n  await fetch(\r\n    \"https://cors-anywhere.herokuapp.com/https://covid19.saglik.gov.tr/?lang=tr-TR\",\r\n    {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n    }\r\n  )\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      const $ = cheerio.load(data);\r\n      cityEstimatedList.cities.forEach((element, index) => {\r\n        const city = $(\"[data-adi=\" + element.label + \"]\").get(0);\r\n        if (city && city.attribs && city.attribs[\"data-detay\"]) {\r\n          const numberOfPatient = parseInt(city.attribs[\"data-detay\"], 10);\r\n          let color = newCityListEstimated.cities[index].status;\r\n          switch (true) {\r\n            case numberOfPatient >= 0 && numberOfPatient < 20:\r\n              color = 1;\r\n              break;\r\n            case numberOfPatient >= 20 && numberOfPatient < 50:\r\n              color = 2;\r\n              break;\r\n            case numberOfPatient >= 50 && numberOfPatient < 100:\r\n              color = 3;\r\n              break;\r\n            case numberOfPatient >= 100:\r\n              color = 4;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          newCityListEstimated.cities[index].status = color;\r\n        }\r\n      });\r\n    });\r\n  return newCityListEstimated;\r\n};\r\n\r\nexport const getRegionCode = async () => {\r\n  let regionCode;\r\n  await fetch(\"https://ipapi.co/json/\", {\r\n    mode: \"cors\",\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data && data.country === \"TR\" && data.region_code) {\r\n        regionCode = data.region_code;\r\n      }\r\n    });\r\n  return regionCode;\r\n};\r\n\r\nexport default updateData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Tabs, Select, Spin } from \"antd\";\r\nimport citiesList from \"./city.json\";\r\nimport nextCitiesList from \"./estimated.json\";\r\nimport ruleList from \"./rules.json\";\r\nimport updateData, {\r\n  updateEstimatedData,\r\n  getRegionCode,\r\n} from \"./getDataFromMinistry.js\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/tr\";\r\nimport \"./styles.css\";\r\nimport ReactGA from \"react-ga\";\r\nconst TRACKING_ID = \"G-6Y2TPZL0RZ\";\r\nReactGA.initialize(TRACKING_ID);\r\nconst { TabPane } = Tabs;\r\nconst LightBulb = () => {\r\n  const [light, setLight] = useState(0);\r\n  const [regionCode, setRegionCode] = useState(0);\r\n  const [spinning, setSpinning] = useState(true);\r\n  const [cityList, setCityList] = useState(\r\n    Object.assign({}, JSON.parse(JSON.stringify(citiesList)))\r\n  );\r\n  const [estimatedCityList, setEstimatedCityList] = useState(\r\n    Object.assign({}, JSON.parse(JSON.stringify(nextCitiesList)))\r\n  );\r\n  const [selectedCity, setSelectedCity] = useState({\r\n    value: -1,\r\n    label: \"\",\r\n    status: -1,\r\n  });\r\n  const [selectedEstimatedCity, setSelectedEstimatedCity] = useState({\r\n    value: -1,\r\n    label: \"\",\r\n    status: -1,\r\n  });\r\n  let ruleId = 1;\r\n  let ruleIdTab2 = 1;\r\n\r\n  const colorCode = [\r\n    {\r\n      key: 1,\r\n      value: \"#0071c1\",\r\n      label: \"Düşük riskli bölge\",\r\n    },\r\n    { key: 2, value: \"#f0e513\", label: \"Orta riskli bölge\" },\r\n    { key: 3, value: \"#f8931f\", label: \"Yüksek riskli bölge\" },\r\n    { key: 4, value: \"#df1a23\", label: \"Çok yüksek riskli bölge\" },\r\n  ];\r\n  const fillColor = colorCode.find((element) => element.key === light);\r\n  useEffect(async () => {\r\n    try {\r\n      const newEstimatedCityList = await updateEstimatedData(estimatedCityList);\r\n      const newCityList = await updateData(cityList);\r\n      setCityList(newCityList);\r\n      setEstimatedCityList(newEstimatedCityList);\r\n    } catch {}\r\n    const newRegionCode = await getRegionCode();\r\n    setRegionCode(newRegionCode);\r\n    setSpinning(false);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (regionCode) {\r\n      const currentLocation = cityList.cities.find(\r\n        (element) => element.value === parseInt(regionCode, 10)\r\n      );\r\n      const currentEstimatedLocation = estimatedCityList.cities.find(\r\n        (element) => element.value === parseInt(regionCode, 10)\r\n      );\r\n      setSelectedCity(currentLocation);\r\n      setSelectedEstimatedCity(currentEstimatedLocation);\r\n      setLight(currentLocation.status);\r\n    }\r\n  }, [regionCode]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Tabs\r\n        defaultActiveKey=\"1\"\r\n        onChange={(key) => {\r\n          if (key === \"2\") {\r\n            const cityStatus = estimatedCityList.cities.find(\r\n              (item) => item.label === selectedEstimatedCity.label\r\n            );\r\n            setLight(cityStatus.status);\r\n            setSelectedEstimatedCity(cityStatus);\r\n          } else {\r\n            const cityStatus = cityList.cities.find(\r\n              (item) => item.label === selectedCity.label\r\n            );\r\n            setLight(cityStatus.status);\r\n            setSelectedCity(cityStatus);\r\n          }\r\n        }}\r\n      >\r\n        <TabPane tab=\"Geçerli kısıtlamalar\" key=\"1\">\r\n          <h4 className=\"title\">\r\n            {moment()\r\n              .locale(\"tr\")\r\n              .format(\"LL\") + \" tarihi illere göre güncel kısıtlama kuralları\"}\r\n          </h4>\r\n          <div\r\n            style={{ paddingTop: 20, paddingBottom: 30, textAlign: \"center\" }}\r\n          >\r\n            <CoronaVirus fillColor={fillColor ? fillColor.value : \"#fff\"} />\r\n          </div>\r\n          <div className=\"container\">\r\n            <Select\r\n              showSearch\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Şehir Seçiniz\"\r\n              onChange={(val) => {\r\n                const cityStatus = cityList.cities.find(\r\n                  (item) => item.value === val\r\n                );\r\n                setLight(cityStatus.status);\r\n                setSelectedCity(cityStatus);\r\n              }}\r\n              options={cityList.cities}\r\n              value={selectedCity.value > 0 ? selectedCity.value : undefined}\r\n              optionFilterProp=\"children\"\r\n              filterOption={(input, option) =>\r\n                option.label\r\n                  .toLocaleUpperCase(\"tr-TR\")\r\n                  .indexOf(input.toLocaleUpperCase(\"tr-TR\")) >= 0\r\n              }\r\n            />\r\n            {light !== 0 && selectedCity ? (\r\n              <h2\r\n                className=\"title\"\r\n                style={{ color: colorCode[light - 1].value }}\r\n              >\r\n                {colorCode[light - 1].label}\r\n              </h2>\r\n            ) : null}\r\n            <div className={spinning ? \"loader\" : \"loader-hide\"}>\r\n              <Spin spinning={spinning} size=\"large\" />\r\n            </div>\r\n            {light !== 0 ? (\r\n              <ul>\r\n                {ruleList.rules.map((el) => {\r\n                  if (el.ruleId === ruleId) {\r\n                    const index = el.status.indexOf(light);\r\n                    if (index > -1) {\r\n                      ruleId++;\r\n                      return (\r\n                        <li\r\n                          key={\"tab1\" + ruleId}\r\n                          style={{ paddingBottom: 10 }}\r\n                          className={\"rule-item-\" + el.icon}\r\n                        >\r\n                          {el.label}\r\n                        </li>\r\n                      );\r\n                    }\r\n                    return null;\r\n                  }\r\n                  return null;\r\n                })}\r\n              </ul>\r\n            ) : null}\r\n            {light !== 0 && selectedCity ? (\r\n              <div className=\"footercontainer\">\r\n                <h5 className=\"titleH5WithoutPadding\">\r\n                  {\r\n                    \"Bilgilendirme amaçlıdır, gerçeği yansıtmayabilir, sorumluluk kabul edilmez.\"\r\n                  }\r\n                </h5>\r\n                <a\r\n                  href=\"https://twitter.com/intent/tweet?text=Ya%C5%9Fad%C4%B1%C4%9F%C4%B1m%20%C5%9Fehrin%20risk%20grubunu%20ve%20ge%C3%A7erli%20olan%20k%C4%B1s%C4%B1tlamalar%C4%B1%20%C3%B6%C4%9Frendim.%20Sende%20%C3%B6%C4%9Frenmek%20istiyorsan%3B&url=https%3A%2F%2Fhassan1903.github.io%2Fkisitlamalar\"\r\n                  className=\"tweetbutton\"\r\n                >\r\n                  <TwitterIcon />\r\n                  <span className=\"tweetlabel\">Tweet</span>\r\n                </a>\r\n                <h5 className=\"titleH5\">\r\n                  {\"Lovely developed by Hasan Kürşat Küçüköztaş\"}\r\n                </h5>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"Vakalara göre tahmini kısıtlamalar\" key=\"2\">\r\n          <h4 className=\"title\">\r\n            {\"12 Mart 2021 tarihi illere göre tahmini kısıtlama kuralları\"}\r\n          </h4>\r\n          <div\r\n            style={{ paddingTop: 20, paddingBottom: 50, textAlign: \"center\" }}\r\n          >\r\n            <CoronaVirus fillColor={fillColor ? fillColor.value : \"#fff\"} />\r\n          </div>\r\n          <div className=\"container\">\r\n            <Select\r\n              showSearch\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Şehir Seçiniz\"\r\n              onChange={(val) => {\r\n                const cityStatus = estimatedCityList.cities.find(\r\n                  (item) => item.value === val\r\n                );\r\n                setLight(cityStatus.status);\r\n                setSelectedEstimatedCity(cityStatus);\r\n              }}\r\n              options={estimatedCityList.cities}\r\n              value={\r\n                selectedEstimatedCity.value > 0\r\n                  ? selectedEstimatedCity.value\r\n                  : undefined\r\n              }\r\n              optionFilterProp=\"children\"\r\n              filterOption={(input, option) =>\r\n                option.label\r\n                  .toLocaleUpperCase(\"tr-TR\")\r\n                  .indexOf(input.toLocaleUpperCase(\"tr-TR\")) >= 0\r\n              }\r\n            />\r\n            {light !== 0 && selectedEstimatedCity ? (\r\n              <h2\r\n                className=\"title\"\r\n                style={{ color: colorCode[light - 1].value }}\r\n              >\r\n                {colorCode[light - 1].label}\r\n              </h2>\r\n            ) : null}\r\n            {light !== 0 ? (\r\n              <ul>\r\n                {ruleList.rules.map((el) => {\r\n                  if (el.ruleId === ruleIdTab2) {\r\n                    const index = el.status.indexOf(light);\r\n                    if (index > -1) {\r\n                      ruleIdTab2++;\r\n                      return (\r\n                        <li\r\n                          key={\"tab2\" + ruleIdTab2}\r\n                          style={{ paddingBottom: 10 }}\r\n                          className={\"rule-item-\" + el.icon}\r\n                        >\r\n                          {el.label}\r\n                        </li>\r\n                      );\r\n                    }\r\n                    return null;\r\n                  }\r\n                  return null;\r\n                })}\r\n              </ul>\r\n            ) : null}\r\n            {light !== 0 && selectedEstimatedCity ? (\r\n              <div className=\"footercontainer\">\r\n                <h5 className=\"titleH5WithoutPadding\">\r\n                  {\r\n                    \"Bilgilendirme amaçlıdır, gerçeği yansıtmayabilir, sorumluluk kabul edilmez.\"\r\n                  }\r\n                </h5>\r\n                <a\r\n                  href=\"https://twitter.com/intent/tweet?text=Ya%C5%9Fad%C4%B1%C4%9F%C4%B1m%20%C5%9Fehrin%20risk%20grubunu%20ve%20ge%C3%A7erli%20olan%20k%C4%B1s%C4%B1tlamalar%C4%B1%20%C3%B6%C4%9Frendim.%20Sende%20%C3%B6%C4%9Frenmek%20istiyorsan%3B&url=https%3A%2F%2Fhassan1903.github.io%2Fkisitlamalar\"\r\n                  className=\"tweetbutton\"\r\n                >\r\n                  <TwitterIcon />\r\n                  <span className=\"tweetlabel\">Tweet</span>\r\n                </a>\r\n                <h5 className=\"titleH5\">\r\n                  {\"Lovely developed by Hasan Kürşat Küçüköztaş\"}\r\n                </h5>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LightbulbSvg = (props) => {\r\n  return (\r\n    <svg width=\"56px\" height=\"90px\" viewBox=\"0 0 56 90\" version=\"1.1\">\r\n      <defs />\r\n      <g\r\n        id=\"Page-1\"\r\n        stroke=\"none\"\r\n        strokeWidth=\"1\"\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n      >\r\n        <g id=\"noun_bulb_1912567\" fill=\"#000000\" fillRule=\"nonzero\">\r\n          <path\r\n            d=\"M38.985,68.873 L17.015,68.873 C15.615,68.873 14.48,70.009 14.48,71.409 C14.48,72.809 15.615,73.944 17.015,73.944 L38.986,73.944 C40.386,73.944 41.521,72.809 41.521,71.409 C41.521,70.009 40.386,68.873 38.985,68.873 Z\"\r\n            id=\"Shape\"\r\n          />\r\n          <path\r\n            d=\"M41.521,78.592 C41.521,77.192 40.386,76.057 38.986,76.057 L17.015,76.057 C15.615,76.057 14.48,77.192 14.48,78.592 C14.48,79.993 15.615,81.128 17.015,81.128 L38.986,81.128 C40.386,81.127 41.521,79.993 41.521,78.592 Z\"\r\n            id=\"Shape\"\r\n          />\r\n          <path\r\n            d=\"M18.282,83.24 C17.114,83.24 16.793,83.952 17.559,84.83 L21.806,89.682 C21.961,89.858 22.273,90 22.508,90 L33.492,90 C33.726,90 34.039,89.858 34.193,89.682 L38.44,84.83 C39.207,83.952 38.885,83.24 37.717,83.24 L18.282,83.24 Z\"\r\n            id=\"Shape\"\r\n          />\r\n          <path\r\n            d=\"M16.857,66.322 L39.142,66.322 C40.541,66.322 41.784,65.19 42.04,63.814 C44.63,49.959 55.886,41.575 55.886,27.887 C55.887,12.485 43.401,0 28,0 C12.599,0 0.113,12.485 0.113,27.887 C0.113,41.575 11.369,49.958 13.959,63.814 C14.216,65.19 15.458,66.322 16.857,66.322 Z\"\r\n            id=\"Shape\"\r\n            fill={props.fillColor}\r\n          />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst TwitterIcon = (props) => {\r\n  return (\r\n    <svg\r\n      version=\"1.1\"\r\n      id=\"Logo\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      width=\"14.88px\"\r\n      height=\"12.24px\"\r\n      viewBox=\"0 0 248 204\"\r\n    >\r\n      <g id=\"Logo_1_\">\r\n        <path\r\n          id=\"blue_background\"\r\n          fill={props.fillColor ? props.fillColor : \"#fff\"}\r\n          d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\r\n\t\tC50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\r\n\t\tc-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\r\n\t\tc7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\r\n\t\tc-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26\r\n\t\tc-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst CoronaVirus = (props) => {\r\n  return (\r\n    <svg\r\n      version=\"1.1\"\r\n      id=\"VirusLogo\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"96px\"\r\n      height=\"96px\"\r\n      viewBox=\"0 0 48 48\"\r\n    >\r\n      <defs></defs>\r\n      <path\r\n        fill={props.fillColor}\r\n        d=\"M46.5,19A1.49977,1.49977,0,0,0,45,20.5V22H40.87225a16.9,16.9,0,0,0-3.53-8.51367l2.92121-2.92139,1.17582.99561a1.49993,1.49993,0,1,0,2.12134-2.1211l-4.99991-5a1.4999,1.4999,0,0,0-2.12127,2.1211l.99565,1.17578-2.92139,2.92138A16.90205,16.90205,0,0,0,26,7.12793V3h1.5a1.5,1.5,0,0,0,0-3h-7a1.5,1.5,0,0,0,0,3H22V7.12793a16.90205,16.90205,0,0,0-8.51367,3.52978L10.56494,7.73633l.99565-1.17578a1.4999,1.4999,0,0,0-2.12127-2.1211l-4.88475,5a1.49993,1.49993,0,0,0,2.12133,2.1211l1.06067-.99561,2.92121,2.92139A16.9,16.9,0,0,0,7.12775,22H3V20.5a1.5,1.5,0,0,0-3,0v7a1.5,1.5,0,0,0,3,0V26H7.12775a16.9,16.9,0,0,0,3.53,8.51367L7.73657,37.43506l-1.17582-.99561a1.49993,1.49993,0,0,0-2.12134,2.1211l4.99991,5a1.4999,1.4999,0,1,0,2.12127-2.1211l-.99565-1.17578,2.92127-2.92138A16.902,16.902,0,0,0,22,40.87207V45H20.5a1.5,1.5,0,0,0,0,3h7a1.5,1.5,0,0,0,0-3H26V40.87207a16.902,16.902,0,0,0,8.51379-3.52978l2.92127,2.92138-.99565,1.17578a1.4999,1.4999,0,0,0,2.12127,2.1211l4.99991-5a1.49993,1.49993,0,1,0-2.12134-2.1211l-1.17582.99561-2.92121-2.92139A16.9,16.9,0,0,0,40.87225,26H45v1.5a1.5,1.5,0,0,0,3,0v-7A1.49977,1.49977,0,0,0,46.5,19Zm-28,1A3.5,3.5,0,1,1,22,16.5,3.49994,3.49994,0,0,1,18.5,20ZM30,33a2,2,0,1,1,2-2A2.00006,2.00006,0,0,1,30,33Z\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<LightBulb />, rootElement);\r\n"],"sourceRoot":""}