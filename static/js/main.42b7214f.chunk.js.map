{"version":3,"sources":["getDataFromMinistry.js","index.js"],"names":["cheerio","require","updateData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","cityList","newCityList","wrap","_context","prev","next","objectSpread","axios","get","then","res","$","load","data","cities","forEach","element","index","city","label","attribs","id","color","status","parseInt","replace","abrupt","stop","_x","apply","this","arguments","updateEstimatedData","_ref2","_callee2","cityEstimatedList","newCityListEstimated","_context2","numberOfPatient","_x2","getRegionCode","_ref3","_callee3","regionCode","_context3","console","log","JSON","stringify","country","region_code","TabPane","Tabs","LightBulb","_useState","useState","_useState2","slicedToArray","light","setLight","_useState3","_useState4","setRegionCode","_useState5","assign","parse","citiesList","_useState6","setCityList","_useState7","_useState8","estimatedCityList","setEstimatedCityList","_useState9","value","_useState10","selectedCity","setSelectedCity","_useState11","_useState12","selectedEstimatedCity","setSelectedEstimatedCity","ruleId","ruleIdTab2","colorCode","key","fillColor","find","useEffect","newEstimatedCityList","newRegionCode","sent","currentLocation","currentEstimatedLocation","react_default","createElement","className","tabs","defaultActiveKey","onChange","cityStatus","item","tab","moment","locale","format","style","paddingTop","paddingBottom","textAlign","src_LightbulbSvg","es_select","showSearch","width","placeholder","val","options","undefined","optionFilterProp","filterOption","input","option","toLocaleUpperCase","indexOf","spin","size","ruleList","rules","map","el","icon","href","src_TwitterIcon","LightbulbSvg","props","height","viewBox","version","stroke","strokeWidth","fill","fillRule","d","TwitterIcon","xmlns","x","y","rootElement","document","getElementById","ReactDOM","render","src_LightBulb"],"mappings":"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","file":"static/js/main.42b7214f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst cheerio = require(\"cheerio\");\r\n\r\nconst updateData = async (cityList) => {\r\n  let newCityList = { ...cityList };\r\n  await axios.get(\"https://covid19.saglik.gov.tr/?lang=tr-TR\").then((res) => {\r\n    const $ = cheerio.load(res.data);\r\n    cityList.cities.forEach((element, index) => {\r\n      const city = $(\"[data-adi=\" + element.label + \"]\").get(1);\r\n      if (city && city.attribs && city.attribs.id) {\r\n        const color = city.attribs.id;\r\n        newCityList.cities[index].status = parseInt(\r\n          color.replace(\"color_\", \"\"),\r\n          10\r\n        );\r\n      }\r\n    });\r\n  });\r\n  return newCityList;\r\n};\r\n\r\nexport const updateEstimatedData = async (cityEstimatedList) => {\r\n  let newCityListEstimated = { ...cityEstimatedList };\r\n  await axios.get(\"https://covid19.saglik.gov.tr/?lang=tr-TR\").then((res) => {\r\n    const $ = cheerio.load(res.data);\r\n    cityEstimatedList.cities.forEach((element, index) => {\r\n      const city = $(\"[data-adi=\" + element.label + \"]\").get(0);\r\n      if (city && city.attribs && city.attribs[\"data-detay\"]) {\r\n        const numberOfPatient = parseInt(city.attribs[\"data-detay\"], 10);\r\n        let color = newCityListEstimated.cities[index].status;\r\n        switch (true) {\r\n          case numberOfPatient >= 0 && numberOfPatient < 20:\r\n            color = 1;\r\n            break;\r\n          case numberOfPatient >= 20 && numberOfPatient < 50:\r\n            color = 2;\r\n            break;\r\n          case numberOfPatient >= 50 && numberOfPatient < 100:\r\n            color = 3;\r\n            break;\r\n          case numberOfPatient >= 100:\r\n            color = 4;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        newCityListEstimated.cities[index].status = color;\r\n      }\r\n    });\r\n  });\r\n  return newCityListEstimated;\r\n};\r\n\r\nexport const getRegionCode = async () => {\r\n  let regionCode;\r\n  await axios.get(\"https://ipapi.co/json/\").then((res) => {\r\n    console.log(\">>>ipapiData:\", JSON.stringify(res.data));\r\n    if (res.data && res.data.country === \"TR\" && res.data.region_code) {\r\n      regionCode = res.data.region_code;\r\n    }\r\n  });\r\n  console.log(\">>>returnRegionCode:\", regionCode);\r\n  return regionCode;\r\n};\r\n\r\nexport default updateData;\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport { Tabs, Select, Spin } from \"antd\";\nimport citiesList from \"./city.json\";\nimport ruleList from \"./rules.json\";\nimport updateData, {\n  updateEstimatedData,\n  getRegionCode,\n} from \"./getDataFromMinistry.js\";\nimport moment from \"moment\";\nimport \"moment/locale/tr\";\nimport \"./styles.css\";\nconst { TabPane } = Tabs;\nconst LightBulb = () => {\n  const [light, setLight] = useState(0);\n  const [regionCode, setRegionCode] = useState(0);\n  const [cityList, setCityList] = useState(\n    Object.assign({}, JSON.parse(JSON.stringify(citiesList)))\n  );\n  const [estimatedCityList, setEstimatedCityList] = useState(\n    Object.assign({}, JSON.parse(JSON.stringify(cityList)))\n  );\n  const [selectedCity, setSelectedCity] = useState({\n    value: -1,\n    label: \"\",\n    status: -1,\n  });\n  const [selectedEstimatedCity, setSelectedEstimatedCity] = useState({\n    value: -1,\n    label: \"\",\n    status: -1,\n  });\n  let ruleId = 1;\n  let ruleIdTab2 = 1;\n\n  const colorCode = [\n    {\n      key: 1,\n      value: \"#0071c1\",\n      label: \"Düşük riskli bölge\",\n    },\n    { key: 2, value: \"#f0e513\", label: \"Orta riskli bölge\" },\n    { key: 3, value: \"#f8931f\", label: \"Yüksek riskli bölge\" },\n    { key: 4, value: \"#df1a23\", label: \"Çok yüksek riskli bölge\" },\n  ];\n  const fillColor = colorCode.find((element) => element.key === light);\n  useEffect(async () => {\n    const newEstimatedCityList = await updateEstimatedData(estimatedCityList);\n    const newCityList = await updateData(cityList);\n    const newRegionCode = await getRegionCode();\n    setCityList(newCityList);\n    setEstimatedCityList(newEstimatedCityList);\n    console.log(\">>>newRegionCode:\", newRegionCode);\n    setRegionCode(newRegionCode);\n  }, []);\n  useEffect(() => {\n    if (regionCode) {\n      console.log(\">>>regionCodeUseEffect:\", regionCode);\n      const currentLocation = cityList.cities.find(\n        (element) => element.value === parseInt(regionCode, 10)\n      );\n      const currentEstimatedLocation = estimatedCityList.cities.find(\n        (element) => element.value === parseInt(regionCode, 10)\n      );\n      setSelectedCity(currentLocation);\n      setSelectedEstimatedCity(currentEstimatedLocation);\n      setLight(currentLocation.status);\n    }\n  }, [regionCode]);\n  return (\n    <div className=\"App\">\n      <Tabs\n        defaultActiveKey=\"1\"\n        onChange={(key) => {\n          if (key === \"2\") {\n            const cityStatus = estimatedCityList.cities.find(\n              (item) => item.label === selectedEstimatedCity.label\n            );\n            setLight(cityStatus.status);\n            setSelectedEstimatedCity(cityStatus);\n          } else {\n            const cityStatus = cityList.cities.find(\n              (item) => item.label === selectedCity.label\n            );\n            setLight(cityStatus.status);\n            setSelectedCity(cityStatus);\n          }\n        }}\n      >\n        <TabPane tab=\"Mevcut kısıtlama\" key=\"1\">\n          <h4 className=\"title\">\n            {moment()\n              .locale(\"tr\")\n              .format(\"LL\") + \" tarihi illere göre güncel kısıtlama kuralları\"}\n          </h4>\n          <div\n            style={{ paddingTop: 20, paddingBottom: 50, textAlign: \"center\" }}\n          >\n            <LightbulbSvg fillColor={fillColor ? fillColor.value : \"#000\"} />\n          </div>\n          <div className=\"container\">\n            <Select\n              showSearch\n              style={{ width: \"100%\" }}\n              placeholder=\"Şehir Seçiniz\"\n              onChange={(val) => {\n                const cityStatus = cityList.cities.find(\n                  (item) => item.value === val\n                );\n                setLight(cityStatus.status);\n                setSelectedCity(cityStatus);\n              }}\n              options={cityList.cities}\n              value={selectedCity.value > 0 ? selectedCity.value : undefined}\n              optionFilterProp=\"children\"\n              filterOption={(input, option) =>\n                option.label\n                  .toLocaleUpperCase(\"tr-TR\")\n                  .indexOf(input.toLocaleUpperCase(\"tr-TR\")) >= 0\n              }\n            />\n            {light !== 0 && selectedCity ? (\n              <h2\n                className=\"title\"\n                style={{ color: colorCode[light - 1].value }}\n              >\n                {colorCode[light - 1].label}\n              </h2>\n            ) : (\n              <div className=\"loader\">\n                <Spin size=\"large\" />\n              </div>\n            )}\n            {light !== 0 ? (\n              <ul>\n                {ruleList.rules.map((el) => {\n                  if (el.ruleId === ruleId) {\n                    const index = el.status.indexOf(light);\n                    if (index > -1) {\n                      ruleId++;\n                      return (\n                        <li\n                          key={\"tab1\" + ruleId}\n                          style={{ paddingBottom: 10 }}\n                          className={\"rule-item-\" + el.icon}\n                        >\n                          {el.label}\n                        </li>\n                      );\n                    }\n                    return null;\n                  }\n                  return null;\n                })}\n              </ul>\n            ) : null}\n            {light !== 0 && selectedCity ? (\n              <div className=\"footercontainer\">\n                <h5 className=\"titleH5WithoutPadding\">\n                  {\n                    \"Bilgilendirme amaçlıdır, gerçeği yansıtmayabilir, sorumluluk kabul edilmez.\"\n                  }\n                </h5>\n                <a\n                  href=\"https://twitter.com/intent/tweet?text=Ya%C5%9Fad%C4%B1%C4%9F%C4%B1m%20%C5%9Fehrin%20risk%20grubunu%20ve%20ge%C3%A7erli%20olan%20k%C4%B1s%C4%B1tlamalar%C4%B1%20%C3%B6%C4%9Frendim.%20Sende%20%C3%B6%C4%9Frenmek%20istiyorsan%3B&url=https%3A%2F%2Fhassan1903.github.io%2Fkisitlamalar\"\n                  className=\"tweetbutton\"\n                >\n                  <TwitterIcon />\n                  <span className=\"tweetlabel\">Tweet</span>\n                </a>\n                <h5 className=\"titleH5\">\n                  {\"Lovely developed by Hasan Kürşat Küçüköztaş\"}\n                </h5>\n              </div>\n            ) : null}\n          </div>\n        </TabPane>\n        <TabPane tab=\"Tahmini kısıtlama\" key=\"2\">\n          <h4 className=\"title\">\n            {moment()\n              .locale(\"tr\")\n              .format(\"LL\") + \" tarihi illere göre tahmini kısıtlama kuralları\"}\n          </h4>\n          <div\n            style={{ paddingTop: 20, paddingBottom: 50, textAlign: \"center\" }}\n          >\n            <LightbulbSvg fillColor={fillColor ? fillColor.value : \"#000\"} />\n          </div>\n          <div className=\"container\">\n            <Select\n              showSearch\n              style={{ width: \"100%\" }}\n              placeholder=\"Şehir Seçiniz\"\n              onChange={(val) => {\n                const cityStatus = estimatedCityList.cities.find(\n                  (item) => item.value === val\n                );\n                setLight(cityStatus.status);\n                setSelectedEstimatedCity(cityStatus);\n              }}\n              options={estimatedCityList.cities}\n              value={\n                selectedEstimatedCity.value > 0\n                  ? selectedEstimatedCity.value\n                  : undefined\n              }\n              optionFilterProp=\"children\"\n              filterOption={(input, option) =>\n                option.label\n                  .toLocaleUpperCase(\"tr-TR\")\n                  .indexOf(input.toLocaleUpperCase(\"tr-TR\")) >= 0\n              }\n            />\n            {light !== 0 && selectedEstimatedCity ? (\n              <h2\n                className=\"title\"\n                style={{ color: colorCode[light - 1].value }}\n              >\n                {colorCode[light - 1].label}\n              </h2>\n            ) : null}\n            {light !== 0 ? (\n              <ul>\n                {ruleList.rules.map((el) => {\n                  if (el.ruleId === ruleIdTab2) {\n                    const index = el.status.indexOf(light);\n                    if (index > -1) {\n                      ruleIdTab2++;\n                      return (\n                        <li\n                          key={\"tab2\" + ruleIdTab2}\n                          style={{ paddingBottom: 10 }}\n                          className={\"rule-item-\" + el.icon}\n                        >\n                          {el.label}\n                        </li>\n                      );\n                    }\n                    return null;\n                  }\n                  return null;\n                })}\n              </ul>\n            ) : null}\n            {light !== 0 && selectedEstimatedCity ? (\n              <div className=\"footercontainer\">\n                <h5 className=\"titleH5WithoutPadding\">\n                  {\n                    \"Bilgilendirme amaçlıdır, gerçeği yansıtmayabilir, sorumluluk kabul edilmez.\"\n                  }\n                </h5>\n                <a\n                  href=\"https://twitter.com/intent/tweet?text=Ya%C5%9Fad%C4%B1%C4%9F%C4%B1m%20%C5%9Fehrin%20risk%20grubunu%20ve%20ge%C3%A7erli%20olan%20k%C4%B1s%C4%B1tlamalar%C4%B1%20%C3%B6%C4%9Frendim.%20Sende%20%C3%B6%C4%9Frenmek%20istiyorsan%3B&url=https%3A%2F%2Fhassan1903.github.io%2Fkisitlamalar\"\n                  className=\"tweetbutton\"\n                >\n                  <TwitterIcon />\n                  <span className=\"tweetlabel\">Tweet</span>\n                </a>\n                <h5 className=\"titleH5\">\n                  {\"Lovely developed by Hasan Kürşat Küçüköztaş\"}\n                </h5>\n              </div>\n            ) : null}\n          </div>\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nconst LightbulbSvg = (props) => {\n  return (\n    <svg width=\"56px\" height=\"90px\" viewBox=\"0 0 56 90\" version=\"1.1\">\n      <defs />\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <g id=\"noun_bulb_1912567\" fill=\"#000000\" fillRule=\"nonzero\">\n          <path\n            d=\"M38.985,68.873 L17.015,68.873 C15.615,68.873 14.48,70.009 14.48,71.409 C14.48,72.809 15.615,73.944 17.015,73.944 L38.986,73.944 C40.386,73.944 41.521,72.809 41.521,71.409 C41.521,70.009 40.386,68.873 38.985,68.873 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M41.521,78.592 C41.521,77.192 40.386,76.057 38.986,76.057 L17.015,76.057 C15.615,76.057 14.48,77.192 14.48,78.592 C14.48,79.993 15.615,81.128 17.015,81.128 L38.986,81.128 C40.386,81.127 41.521,79.993 41.521,78.592 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M18.282,83.24 C17.114,83.24 16.793,83.952 17.559,84.83 L21.806,89.682 C21.961,89.858 22.273,90 22.508,90 L33.492,90 C33.726,90 34.039,89.858 34.193,89.682 L38.44,84.83 C39.207,83.952 38.885,83.24 37.717,83.24 L18.282,83.24 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M16.857,66.322 L39.142,66.322 C40.541,66.322 41.784,65.19 42.04,63.814 C44.63,49.959 55.886,41.575 55.886,27.887 C55.887,12.485 43.401,0 28,0 C12.599,0 0.113,12.485 0.113,27.887 C0.113,41.575 11.369,49.958 13.959,63.814 C14.216,65.19 15.458,66.322 16.857,66.322 Z\"\n            id=\"Shape\"\n            fill={props.fillColor}\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nconst TwitterIcon = (props) => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Logo\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"14.88px\"\n      height=\"12.24px\"\n      viewBox=\"0 0 248 204\"\n    >\n      <g id=\"Logo_1_\">\n        <path\n          id=\"blue_background\"\n          fill={props.fillColor ? props.fillColor : \"#fff\"}\n          d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\n\t\tC50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\n\t\tc-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\n\t\tc7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\n\t\tc-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26\n\t\tc-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<LightBulb />, rootElement);\n"],"sourceRoot":""}