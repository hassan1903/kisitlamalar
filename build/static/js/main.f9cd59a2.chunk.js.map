{"version":3,"sources":["getDataFromMinistry.js","index.js"],"names":["cheerio","require","updateData","cityList","newCityList","fetch","mode","then","response","text","data","$","load","cities","forEach","element","index","city","label","get","attribs","id","color","status","parseInt","replace","LightBulb","_useState","useState","_useState2","Object","slicedToArray","light","setLight","_useState3","value","_useState4","selectedCity","setSelectedCity","ruleId","citiesList","colorCode","key","fillColor","find","useEffect","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","json","region_code","currentLocation","stop","react_default","createElement","className","moment","locale","format","style","paddingTop","paddingBottom","textAlign","src_LightbulbSvg","react_select_esm","placeholder","options","onInputChange","newValue","charAt","toLocaleUpperCase","slice","onChange","val","cityStatus","item","ruleList","rules","map","el","indexOf","icon","href","src_TwitterIcon","LightbulbSvg","props","width","height","viewBox","version","stroke","strokeWidth","fill","fillRule","d","TwitterIcon","xmlns","x","y","rootElement","document","getElementById","ReactDOM","render","src_LightBulb"],"mappings":"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","file":"static/js/main.f9cd59a2.chunk.js","sourcesContent":["const cheerio = require(\"cheerio\");\r\n\r\nconst updateData = (cityList) => {\r\n  let newCityList = cityList;\r\n  fetch(\"https://covid19.saglik.gov.tr/?lang=tr-TR\", {\r\n    mode: \"cors\",\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      const $ = cheerio.load(data);\r\n      cityList.cities.forEach((element, index) => {\r\n        const city = $(\"[data-adi=\" + element.label + \"]\").get(1);\r\n        if (city && city.attribs && city.attribs.id) {\r\n          const color = city.attribs.id;\r\n          newCityList.cities[index].status = parseInt(\r\n            color.replace(\"color_\", \"\"),\r\n            10\r\n          );\r\n        }\r\n      });\r\n    });\r\n  return newCityList;\r\n};\r\n\r\nexport default updateData;\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Select from \"react-select\";\nimport citiesList from \"./city.json\";\nimport ruleList from \"./rules.json\";\nimport updateData from \"./getDataFromMinistry.js\";\nimport moment from \"moment\";\nimport \"moment/locale/tr\";\nimport \"./styles.css\";\n\nconst LightBulb = () => {\n  let [light, setLight] = useState(0);\n  let [selectedCity, setSelectedCity] = useState({\n    value: -1,\n    label: \"\",\n    status: -1,\n  });\n  let ruleId = 1;\n  let cityList = citiesList;\n  const colorCode = [\n    {\n      key: 1,\n      value: \"#0071c1\",\n      label: \"Düşük riskli bölge\",\n    },\n    { key: 2, value: \"#f0e513\", label: \"Orta riskli bölge\" },\n    { key: 3, value: \"#f8931f\", label: \"Yüksek riskli bölge\" },\n    { key: 4, value: \"#df1a23\", label: \"Çok yüksek riskli bölge\" },\n  ];\n  const fillColor = colorCode.find((element) => element.key === light);\n  useEffect(async () => {\n    cityList = await updateData(cityList);\n    fetch(\"https://ipapi.co/json/\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data && data.region_code) {\n          const currentLocation = cityList.cities.find(\n            (element) => element.value === parseInt(data.region_code, 10)\n          );\n          setSelectedCity(currentLocation);\n          setLight(currentLocation.status);\n        }\n      });\n  }, []);\n  return (\n    <div className=\"App\">\n      <h4 className=\"title\">\n        {moment()\n          .locale(\"tr\")\n          .format(\"LL\") + \" tarihi illere göre güncel kısıtlama kuralları\"}\n      </h4>\n      <div style={{ paddingTop: 20, paddingBottom: 50, textAlign: \"center\" }}>\n        <LightbulbSvg fillColor={fillColor ? fillColor.value : \"#000\"} />\n      </div>\n      <div className=\"container\">\n        <Select\n          placeholder=\"Şehir seçiniz\"\n          label={selectedCity}\n          options={cityList.cities}\n          onInputChange={(newValue) =>\n            newValue.charAt(0).toLocaleUpperCase(\"tr-TR\") + newValue.slice(1)\n          }\n          value={selectedCity}\n          onChange={(val) => {\n            const cityStatus = cityList.cities.find(\n              (item) => item.label === val.label\n            );\n            setLight(cityStatus.status);\n            setSelectedCity(val);\n          }}\n        />\n        {light !== 0 && selectedCity ? (\n          <h3 className=\"title\" style={{ color: colorCode[light - 1].value }}>\n            {colorCode[light - 1].label}\n          </h3>\n        ) : null}\n        {light !== 0 ? (\n          <ul>\n            {ruleList.rules.map((el) => {\n              if (el.ruleId === ruleId) {\n                const index = el.status.indexOf(light);\n                if (index > -1) {\n                  ruleId++;\n                  return (\n                    <li\n                      key={ruleId}\n                      style={{ paddingBottom: 10 }}\n                      className={\"rule-item-\" + el.icon}\n                    >\n                      {el.label}\n                    </li>\n                  );\n                }\n                return null;\n              }\n              return null;\n            })}\n          </ul>\n        ) : null}\n        {light !== 0 && selectedCity ? (\n          <div className=\"footercontainer\">\n            <h6 className=\"title\">\n              {\n                \"Bilgilendirme amaçlıdır, gerçeği yansıtmayabilir, sorumluluk kabul edilmez.\"\n              }\n            </h6>\n            <a\n              href=\"https://twitter.com/intent/tweet?text=Ya%C5%9Fad%C4%B1%C4%9F%C4%B1m%20%C5%9Fehrin%20risk%20grubunu%20ve%20ge%C3%A7erli%20olan%20k%C4%B1s%C4%B1tlamalar%C4%B1%20%C3%B6%C4%9Frendim.%20Sende%20%C3%B6%C4%9Frenmek%20istiyorsan%3B&url=https%3A%2F%2Fhassan1903.github.io%2Fkisitlamalar\"\n              className=\"tweetbutton\"\n            >\n              <TwitterIcon />\n              <span className=\"tweetlabel\">Tweet</span>\n            </a>\n            <h6 className=\"title\">\n              {\"Lovely developed by Hasan Kürşat Küçüköztaş\"}\n            </h6>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nconst LightbulbSvg = (props) => {\n  return (\n    <svg width=\"56px\" height=\"90px\" viewBox=\"0 0 56 90\" version=\"1.1\">\n      <defs />\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <g id=\"noun_bulb_1912567\" fill=\"#000000\" fillRule=\"nonzero\">\n          <path\n            d=\"M38.985,68.873 L17.015,68.873 C15.615,68.873 14.48,70.009 14.48,71.409 C14.48,72.809 15.615,73.944 17.015,73.944 L38.986,73.944 C40.386,73.944 41.521,72.809 41.521,71.409 C41.521,70.009 40.386,68.873 38.985,68.873 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M41.521,78.592 C41.521,77.192 40.386,76.057 38.986,76.057 L17.015,76.057 C15.615,76.057 14.48,77.192 14.48,78.592 C14.48,79.993 15.615,81.128 17.015,81.128 L38.986,81.128 C40.386,81.127 41.521,79.993 41.521,78.592 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M18.282,83.24 C17.114,83.24 16.793,83.952 17.559,84.83 L21.806,89.682 C21.961,89.858 22.273,90 22.508,90 L33.492,90 C33.726,90 34.039,89.858 34.193,89.682 L38.44,84.83 C39.207,83.952 38.885,83.24 37.717,83.24 L18.282,83.24 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M16.857,66.322 L39.142,66.322 C40.541,66.322 41.784,65.19 42.04,63.814 C44.63,49.959 55.886,41.575 55.886,27.887 C55.887,12.485 43.401,0 28,0 C12.599,0 0.113,12.485 0.113,27.887 C0.113,41.575 11.369,49.958 13.959,63.814 C14.216,65.19 15.458,66.322 16.857,66.322 Z\"\n            id=\"Shape\"\n            fill={props.fillColor}\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nconst TwitterIcon = (props) => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Logo\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"14.88px\"\n      height=\"12.24px\"\n      viewBox=\"0 0 248 204\"\n    >\n      <g id=\"Logo_1_\">\n        <path\n          id=\"blue_background\"\n          fill={props.fillColor ? props.fillColor : \"#fff\"}\n          d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\n\t\tC50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\n\t\tc-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\n\t\tc7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\n\t\tc-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26\n\t\tc-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<LightBulb />, rootElement);\n"],"sourceRoot":""}