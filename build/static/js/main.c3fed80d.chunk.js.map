{"version":3,"sources":["index.js"],"names":["LightBulb","_useState","useState","_useState2","Object","C_Users_hasan_Desktop_kisitlamalar_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","light","setLight","_useState3","value","label","_useState4","selectedCity","setSelectedCity","ruleId","colorCode","key","fillColor","find","element","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","paddingTop","paddingBottom","textAlign","LightbulbSvg","react_select__WEBPACK_IMPORTED_MODULE_3__","placeholder","options","cityList","cities","onInputChange","newValue","charAt","toLocaleUpperCase","slice","onChange","val","cityStatus","item","status","ruleList","rules","map","el","indexOf","props","width","height","viewBox","version","id","stroke","strokeWidth","fill","fillRule","d","rootElement","document","getElementById","ReactDOM","render"],"mappings":"23JAQA,SAASA,IAAY,IAAAC,EACKC,mBAAS,GADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACPI,EADOJ,EAAA,GAAAK,EAEmBN,mBAAS,CAAEO,MAAO,GAAIC,MAAO,KAFhDC,EAAAP,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEdI,EAFcD,EAAA,GAEAE,EAFAF,EAAA,GAGfG,EAAS,EACPC,EAAY,CAChB,CACEC,IAAK,EACLP,MAAO,UACPC,MAAO,oCAET,CAAEM,IAAK,EAAGP,MAAO,UAAWC,MAAO,wBACnC,CAAEM,IAAK,EAAGP,MAAO,UAAWC,MAAO,6BACnC,CAAEM,IAAK,EAAGP,MAAO,UAAWC,MAAO,qCAE/BO,EAAYF,EAAUG,KAAK,SAACC,GAAD,OAAaA,EAAQH,MAAQV,IAC9D,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,WAAY,GAAIC,cAAe,GAAIC,UAAW,WAC1DP,EAAAC,EAAAC,cAACM,EAAD,CAAcX,UAAWA,EAAYA,EAAUR,MAAQ,UAEzDW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,YAAY,wBACZpB,MAAOE,EACPmB,QAASC,EAASC,OAClBC,cAAe,SAACC,GACd,OACEA,EAASC,OAAO,GAAGC,kBAAkB,SAAWF,EAASG,MAAM,IAGnEC,SAAU,SAACC,GACT,IAAMC,EAAaT,EAASC,OAAOf,KACjC,SAACwB,GAAD,OAAUA,EAAKhC,QAAU8B,EAAI9B,QAE/BH,EAASkC,EAAWE,QACpB9B,EAAgB2B,MAGT,IAAVlC,GAAeM,EACdQ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASR,EAAUT,EAAQ,GAAGI,OAC1C,KACO,IAAVJ,EACCc,EAAAC,EAAAC,cAAA,UACGsB,EAASC,MAAMC,IAAI,SAACC,GACnB,OAAIA,EAAGjC,SAAWA,GACFiC,EAAGJ,OAAOK,QAAQ1C,IACnB,GACXQ,IAEEM,EAAAC,EAAAC,cAAA,MAAIN,IAAKF,EAAQU,MAAO,CAAEE,cAAe,IACtCqB,EAAGrC,QAML,QAGT,OAMZ,SAASkB,EAAaqB,GACpB,OACE7B,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,OAAOC,OAAO,OAAOC,QAAQ,YAAYC,QAAQ,OAC1DjC,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,KACEgC,GAAG,SACHC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,WAETtC,EAAAC,EAAAC,cAAA,KAAGgC,GAAG,oBAAoBG,KAAK,UAAUC,SAAS,WAChDtC,EAAAC,EAAAC,cAAA,QACEqC,EAAE,0NACFL,GAAG,UAELlC,EAAAC,EAAAC,cAAA,QACEqC,EAAE,0NACFL,GAAG,UAELlC,EAAAC,EAAAC,cAAA,QACEqC,EAAE,mOACFL,GAAG,UAELlC,EAAAC,EAAAC,cAAA,QACEqC,EAAE,0QACFL,GAAG,QACHG,KAAMR,EAAMhC,eAQxB,IAAM2C,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO5C,EAAAC,EAAAC,cAACtB,EAAD,MAAe4D","file":"static/js/main.c3fed80d.chunk.js","sourcesContent":["// @flow\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Select from \"react-select\";\nimport cityList from \"./city.json\";\nimport ruleList from \"./rules.json\";\nimport \"./styles.css\";\n\nfunction LightBulb() {\n  let [light, setLight] = useState(0);\n  let [selectedCity, setSelectedCity] = useState({ value: \"\", label: \"\" });\n  let ruleId = 1;\n  const colorCode = [\n    {\n      key: 1,\n      value: \"#3363ff\",\n      label: \"Düşük riskli bölge\",\n    },\n    { key: 2, value: \"#ffbb73\", label: \"Orta riskli bölge\" },\n    { key: 3, value: \"#ff7f00\", label: \"Yüksek riskli bölge\" },\n    { key: 4, value: \"#ff3933\", label: \"Çok yüksek riskli bölge\" },\n  ];\n  const fillColor = colorCode.find((element) => element.key === light);\n  return (\n    <div className=\"App\">\n      <div style={{ paddingTop: 20, paddingBottom: 50, textAlign: \"center\" }}>\n        <LightbulbSvg fillColor={fillColor ? fillColor.value : \"#000\"} />\n      </div>\n      <div className=\"container\">\n        <Select\n          placeholder=\"Şehir seçiniz\"\n          label={selectedCity}\n          options={cityList.cities}\n          onInputChange={(newValue) => {\n            return (\n              newValue.charAt(0).toLocaleUpperCase(\"tr-TR\") + newValue.slice(1)\n            );\n          }}\n          onChange={(val) => {\n            const cityStatus = cityList.cities.find(\n              (item) => item.label === val.label\n            );\n            setLight(cityStatus.status);\n            setSelectedCity(val);\n          }}\n        />\n        {light !== 0 && selectedCity ? (\n          <h3 className=\"title\">{colorCode[light - 1].label}</h3>\n        ) : null}\n        {light !== 0 ? (\n          <ul>\n            {ruleList.rules.map((el) => {\n              if (el.ruleId === ruleId) {\n                const index = el.status.indexOf(light);\n                if (index > -1) {\n                  ruleId++;\n                  return (\n                    <li key={ruleId} style={{ paddingBottom: 5 }}>\n                      {el.label}\n                    </li>\n                  );\n                }\n                return null;\n              }\n              return null;\n            })}\n          </ul>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nfunction LightbulbSvg(props) {\n  return (\n    <svg width=\"56px\" height=\"90px\" viewBox=\"0 0 56 90\" version=\"1.1\">\n      <defs />\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <g id=\"noun_bulb_1912567\" fill=\"#000000\" fillRule=\"nonzero\">\n          <path\n            d=\"M38.985,68.873 L17.015,68.873 C15.615,68.873 14.48,70.009 14.48,71.409 C14.48,72.809 15.615,73.944 17.015,73.944 L38.986,73.944 C40.386,73.944 41.521,72.809 41.521,71.409 C41.521,70.009 40.386,68.873 38.985,68.873 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M41.521,78.592 C41.521,77.192 40.386,76.057 38.986,76.057 L17.015,76.057 C15.615,76.057 14.48,77.192 14.48,78.592 C14.48,79.993 15.615,81.128 17.015,81.128 L38.986,81.128 C40.386,81.127 41.521,79.993 41.521,78.592 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M18.282,83.24 C17.114,83.24 16.793,83.952 17.559,84.83 L21.806,89.682 C21.961,89.858 22.273,90 22.508,90 L33.492,90 C33.726,90 34.039,89.858 34.193,89.682 L38.44,84.83 C39.207,83.952 38.885,83.24 37.717,83.24 L18.282,83.24 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M16.857,66.322 L39.142,66.322 C40.541,66.322 41.784,65.19 42.04,63.814 C44.63,49.959 55.886,41.575 55.886,27.887 C55.887,12.485 43.401,0 28,0 C12.599,0 0.113,12.485 0.113,27.887 C0.113,41.575 11.369,49.958 13.959,63.814 C14.216,65.19 15.458,66.322 16.857,66.322 Z\"\n            id=\"Shape\"\n            fill={props.fillColor}\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<LightBulb />, rootElement);\n"],"sourceRoot":""}